import React from "react";
import { gsap } from "gsap";
import { useRef, useState, useEffect } from "react";
import styles from "../styles/Home.module.css";
import Head from "next/head";
import { createContext } from "react";
import { useContext } from "react";
import Link from "next/link";
import { useRouter } from "next/router";
import { AnimatePresence, motion } from "framer-motion";

export default function Layout({ children }) {
  const router = useRouter();
  const blueBar1 = useRef(null);
  const blueContainer1 = useRef(null);
  const whiteBar0 = useRef(null);
  const whiteContainer0 = useRef(null);
  const redBar2 = useRef(null);
  const redContainer2 = useRef(null);
  const yellowBar3 = useRef(null);
  const yellowContainer3 = useRef(null);
  const [zInd, setZInd] = useState("");
  const [isOn, setIsOn] = useState("white");
  const [path, setPath] = useState(router.pathname);

  const variants = {
    open: {
      width: "calc(100vw - 180px)",
      // zIndex: [0, 20, 20, 0],
      // zIndex: -1,
    },
    closed: { width: "60px" },
    // zIndex: [0, 20, 20, 0],
    // zIndex: -1,
  };

  useEffect(() => {
    const TL = gsap.timeline();

    TL.to(
      yellowBar3.current,
      { y: "0", duration: 1.3, ease: "power3.out", delay: 1.5 },
      "-=1.1"
    )
      .to(
        redBar2.current,
        { y: "0", duration: 1.3, ease: "power3.out" },
        "-=1.1"
      )
      .to(
        blueBar1.current,
        { y: "0", duration: 1.3, ease: "power3.out" },
        "-=1.1"
      )
      .to(
        whiteBar0.current,
        { y: "0", duration: 1.3, ease: "power3.out" },
        "-=1.1"
      );
    // .to(title.current, { opacity: 1, duration: 2 }, "-=0.95");
  }, []);

  // function handleClicRed() {
  //   const TL = gsap.timeline();
  //   setZInd("z-20");
  //   TL.to(redContainer2.current, {
  //     width: "calc(100% - 180px)",
  //     duration: 0.9,
  //     ease: "power3.out",
  //   }).to(
  //     blueContainer1.current,
  //     {
  //       width: "60px",
  //       ease: "power3.out",
  //       duration: 0.9,
  //     },
  //     "-=0.9"
  //   );
  // }
  function handleClicYellow() {
    setZInd("z-20");
    gsap.to(yellowContainer3.current, {
      width: "calc(100% - 180px)",
      duration: 0.9,
      ease: "power3.out",
    });
  }
  return (
    <div className={path === "/food" ? "bg-[#5EA2EC]" : "bg-white"}>
      <Head>
        <title>Canal Street</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav
        className={
          "hidden md:flex w-full shrink-0 fixed justify-end font-apercu" + zInd
        }
      >
        <motion.div
        // animate={isOn === "white" ? "open" : "closed"}
        // variants={variants}
        // transition={{
        //   duration: 0.5,
        //   ease: "easeInOut",
        //   times: [0, 0.1, 0.9, 1],
        // }}
        >
          <Link
            href="/"
            ref={whiteContainer0}
            scroll={false}
            className="h-full w-full relative flex justify-start "
          >
            <div
              ref={whiteBar0}
              className="h-[100vh] w-full  bg-white  items-center cursor-pointer -translate-y-full flex justify-start "
            >
              <div
                className={
                  "w-[60px] grow-0 flex flex-col justify-center relative h-full items-center "
                }
              ></div>
            </div>
          </Link>
        </motion.div>
        <motion.div
          // style={{
          //   width: isOn ? "calc(100vw - 180px)" : "60px",
          //   height: "100vh",
          //   transitionDuration: "620ms",
          // }}
          animate={isOn === "blue" ? "open" : "closed"}
          variants={variants}
          transition={{
            duration: 0.5,
            ease: "easeInOut",
            times: [0, 0.1, 0.9, 1],
          }}
          onClick={() => {
            setIsOn("blue");
          }}
        >
          <Link
            href="/food"
            ref={blueContainer1}
            scroll={false}
            className="h-full w-full relative flex justify-start  "
            // onClick={handleClicBlue}
          >
            <div
              ref={blueBar1}
              className="h-[100vh] w-full  bg-[#5EA2EC]  items-center cursor-pointer -translate-y-full flex justify-start "
            >
              <div
                className={
                  "w-[60px] grow-0 flex flex-col justify-center relative h-full items-center " +
                  (isOn !== "blue" ? "opacity-1" : "opacity-0")
                }
              >
                <span className="text-xl absolute top-20">餐饮</span>
                <h3 className="rotate-90 text-xl">Food</h3>
              </div>
            </div>
          </Link>
        </motion.div>
        <motion.div
          animate={isOn === "red" ? "open" : "closed"}
          variants={variants}
          transition={{
            duration: 0.5,
            ease: "easeInOut",
            times: [0, 0.1, 0.9, 1],
          }}
        >
          <Link
            href="/retail"
            ref={redContainer2}
            className="h-[100vh] w-full relative flex justify-start  "
            // onClick={handleClicRed}
          >
            <div
              ref={redBar2}
              className="h-[100vh] w-full bg-[#F64444]  items-center cursor-pointer -translate-y-full flex justify-start "
            >
              <div
                className={
                  "w-[60px] flex flex-col justify-center relative h-full items-center " +
                  (isOn !== "red" ? "opacity-1" : "opacity-0")
                }
              >
                <span className="text-xl absolute top-20">餐饮</span>
                <h3 className="rotate-90 text-xl">Retail</h3>
              </div>
            </div>
          </Link>
        </motion.div>
        <div
          ref={yellowContainer3}
          className="h-[100vh] w-[60px] relative flex justify-start  "
          onClick={handleClicYellow}
        >
          <div
            ref={yellowBar3}
            className="h-[100vh] w-full bg-[#FFB300]  items-center cursor-pointer -translate-y-full flex justify-start "
          >
            <div className="w-[60px] flex flex-col justify-center relative h-full items-center ">
              <span className="text-xl absolute top-20">餐饮</span>
              <h3 className="rotate-90 text-xl">Community</h3>
            </div>
          </div>
        </div>
      </nav>

      <AnimatePresence exitBeforeEnter>
        {React.cloneElement(children, { isOn, setIsOn })}
        {/* {children} */}
      </AnimatePresence>
    </div>
  );
}
